Given an integer n, return true if it is a power of two. Otherwise, return false.

An integer n is a power of two, if there exists an integer x such that n == 2x.

 

Example 1:

Input: n = 1
Output: true
Explanation: 20 = 1

Example 2:

Input: n = 16
Output: true
Explanation: 24 = 16

Example 3:

Input: n = 3
Output: false

 

Constraints:

    -231 <= n <= 231 - 1

 


function isPowerOfTwo(n) {
    // A number is a power of two if it is greater than 0 and 
    // the bitwise AND of the number and its predecessor is 0.
    // This works because powers of two in binary look like 1000...0,
    // and their predecessors look like 0111...1. So, doing an AND operation
    // between such a number and its predecessor will always result in 0.
    // Example: 8 (1000 in binary) and 7 (0111 in binary) => 1000 & 0111 = 0000
    return n > 0 && (n & (n - 1)) === 0;
}
