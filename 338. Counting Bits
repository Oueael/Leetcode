338. Counting Bits
Easy
Topics
Companies
Hint

Given an integer n, return an array ans of length n + 1 such that for each i (0 <= i <= n), ans[i] is the number of 1's in the binary representation of i.

Example 1:

Input: n = 2
Output: [0,1,1]
Explanation:
0 --> 0
1 --> 1
2 --> 10
=========================================================
class Solution:
    def countBits(self, n: int) -> List[int]:
        ans = []
        for i in range(n + 1):
            # Convert i to binary and count the number of '1's
            ans.append(bin(i).count('1'))
        return ans
=======================================================
"""
From 1 up to n
how many 1's in the binary representation of n

Example: 5
0 000  0  0
1 001  1  1
2 010  1  10 (1 + 0)
3 011  2  11 (1 + 1)
4 100  1  1 + 0
5 101  2  1 + 1
6 110  2  1 + 2
7 111  3  1 + 3

110
 11

val = val for this bit + bits from 0
vals = [0] * (n+1)
j = 0
digits = 1
for i in range(n+1):
    vals[i] = vals without MSB + 1
return vals
