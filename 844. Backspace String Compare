844. Backspace String Compare
Easy
Topics
Companies

Given two strings s and t, return true if they are equal when both are typed into empty text editors. '#' means a backspace character.

Note that after backspacing an empty text, the text will continue empty.

 

Example 1:

Input: s = "ab#c", t = "ad#c"
Output: true
Explanation: Both s and t become "ac".

Example 2:

Input: s = "ab##", t = "c#d#"
Output: true
Explanation: Both s and t become "".

Example 3:

Input: s = "a#c", t = "b"
Output: false
Explanation: s becomes "c" while t becomes "b".

 

Constraints:

    1 <= s.length, t.length <= 200
    s and t only contain lowercase letters and '#' characters.


function backspaceCompare(s, t) {
  // A helper function that applies backspaces to a given string
  function processString(str) {
    const stack = []; // Use a stack to keep track of characters
    // Iterate through each character in the string
    for (let char of str) {
      if (char !== '#') {
        stack.push(char); // Add character to stack if it's not '#'
      } else if (stack.length) {
        stack.pop(); // Remove the top character from stack if '#' is found
      }
      // If stack is empty and '#' is found, do nothing (backspace on empty text)
    }
    // Join the characters in the stack to form the processed string
    return stack.join('');
  }
  
  // Compare the processed strings
  return processString(s) === processString(t);
}
